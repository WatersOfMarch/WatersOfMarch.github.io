<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>springboot查询</title>
    <url>/2021/08/01/springboot%E6%9F%A5%E8%AF%A2-0/</url>
    <content><![CDATA[<h1 id="SpringBoot-MyBatis-查询语句-（根据条件查询）"><a href="#SpringBoot-MyBatis-查询语句-（根据条件查询）" class="headerlink" title="SpringBoot + MyBatis 查询语句  （根据条件查询）"></a>SpringBoot + MyBatis 查询语句  （根据条件查询）</h1><h3 id="1-新建数据库和表内容"><a href="#1-新建数据库和表内容" class="headerlink" title="1.新建数据库和表内容"></a>1.新建数据库和表内容</h3><p><img src="/2021/08/01/springboot%E6%9F%A5%E8%AF%A2-0/image-20210722152711177.png"></p>
<p>全部根据 tt 中的数据进行查询</p>
<h3 id="2-创建工程目录结构（springboot创建好后）"><a href="#2-创建工程目录结构（springboot创建好后）" class="headerlink" title="2.创建工程目录结构（springboot创建好后）"></a>2.创建工程目录结构（springboot创建好后）</h3><p><img src="/2021/08/01/springboot%E6%9F%A5%E8%AF%A2-0/image-20210722152928143.png"></p>
<ul>
<li>pom.xml依赖</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.kejian<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mybatis.jar--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--mySql的驱动--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--druid连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>application.yml（修改全局变量）</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#自定义端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#连接数据库（我的是数据库名是kejain）</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/kejian?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="comment">#?后增加编码格式</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> <span class="comment">#数据库用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span> <span class="comment">#数据库密码</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#扫描相关文件</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*.xml</span></span><br><span class="line">  <span class="attr">config-location:</span> <span class="string">classpath:mybatis-config.xml</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在resources目录下新建mybatis-config.xml（按需求添加，可以不要）</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--     使用jdbc的getGeneratedKeys获得数据库自增主键值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;useGeneratedKeys&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--           使用列标签替换列别名，默认true--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;useColumnLabel&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        开启驼峰命名create_time-&gt;createTime--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>至此基础配置OK，在目录下添加类</strong></p>
<h2 id="3-entity层下添加实体类"><a href="#3-entity层下添加实体类" class="headerlink" title="3.entity层下添加实体类"></a>3.entity层下添加实体类</h2><p>entity包也有叫 pojo, damain， 都是一个意思</p>
<ul>
<li>新建 Poem.java（添加实体类，和数据库对应）</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Poem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String tt;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String A;</span><br><span class="line">    <span class="keyword">private</span> String B;</span><br><span class="line">    <span class="keyword">private</span> String C;</span><br><span class="line">    <span class="keyword">private</span> String D;</span><br><span class="line">    <span class="keyword">private</span> String letter;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTt</span><span class="params">(String tt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tt = tt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA</span><span class="params">(String a)</span> </span>&#123;</span><br><span class="line">        A = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> B;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setB</span><span class="params">(String b)</span> </span>&#123;</span><br><span class="line">        B = b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getC</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> C;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setC</span><span class="params">(String c)</span> </span>&#123;</span><br><span class="line">        C = c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getD</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> D;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setD</span><span class="params">(String d)</span> </span>&#123;</span><br><span class="line">        D = d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLetter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> letter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLetter</span><span class="params">(String letter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.letter = letter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Poem&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, time=&#x27;&quot;</span> + tt + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, title=&#x27;&quot;</span> + title + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, A=&#x27;&quot;</span> + A + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, B=&#x27;&quot;</span> + B + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, C=&#x27;&quot;</span> + C + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, D=&#x27;&quot;</span> + D + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, letter=&#x27;&quot;</span> + letter + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="4-添加-mapper-操纵数据库"><a href="#4-添加-mapper-操纵数据库" class="headerlink" title="4.添加 mapper 操纵数据库"></a>4.添加 mapper 操纵数据库</h2><p>dao 层名为持久层，也可叫 mapper 层</p>
<ul>
<li>dao 层下新建PoemMapper.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PoemMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//因为需要返回多个，设为List</span></span><br><span class="line">    <span class="function">List&lt;Poem&gt; <span class="title">findSome</span><span class="params">(<span class="meta">@Param(&quot;tt&quot;)</span>String time)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>resources 下新建 mapper 文件夹，存放dao 层 mapper 的映射文件</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace是命名空间，对应dao层mapper文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.first_demo3.dao.PoemMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--id名对应dao层mapper的函数--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findSome&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.first_demo3.entity.Poem&quot;</span>&gt;</span></span><br><span class="line">        select id,title,A,B,C,D,letter from poem where tt = #&#123;tt&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="5-添加业务逻辑"><a href="#5-添加业务逻辑" class="headerlink" title="5.添加业务逻辑"></a>5.添加业务逻辑</h2><p>service层为业务逻辑层，处理算法并返回数据给界面层</p>
<ul>
<li>service下新建 PoemService.java 选择接口类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PoemService</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Poem&gt; <span class="title">findSome</span><span class="params">(String time)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>service下新建impl文件夹，管理映射</li>
<li>impl下新建PoemServiceImpl.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PoemServiceImpl</span> <span class="keyword">implements</span> <span class="title">PoemService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PoemMapper poemMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Poem&gt; <span class="title">findSome</span><span class="params">(String tt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> poemMapper.findSome(tt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="6-终于可以写接口了"><a href="#6-终于可以写接口了" class="headerlink" title="6.终于可以写接口了"></a>6.终于可以写接口了</h2><p>controller 层又名界面层，调用 service</p>
<ul>
<li>controller 下新建PoemController.java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestControllerpublic</span> <span class="class"><span class="keyword">class</span> <span class="title">PoemController</span> </span>&#123;    </span><br><span class="line">    <span class="meta">@Autowired</span>    </span><br><span class="line">    <span class="keyword">private</span> PoemService poemService;        </span><br><span class="line">    <span class="comment">//查找后返回部分数据    </span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/get/&#123;tt&#125;&quot;)</span>    </span><br><span class="line">    <span class="keyword">public</span> List&lt;Poem&gt;getSome(<span class="meta">@PathVariable</span> String tt)&#123;        <span class="keyword">return</span> poemService.findSome(tt);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="7-PostMan测试接口"><a href="#7-PostMan测试接口" class="headerlink" title="7.PostMan测试接口"></a>7.PostMan测试接口</h2><p><img src="/2021/08/01/springboot%E6%9F%A5%E8%AF%A2-0/image-20210722160646581.png"></p>
<p>其他的雷同，在 /get/  输入对应的 tt 值就可调用</p>
<p><strong>最终的目录</strong></p>
<p><img src="/2021/08/01/springboot%E6%9F%A5%E8%AF%A2-0/image-20210722160822033.png"></p>]]></content>
  </entry>
  <entry>
    <title>初探返回类</title>
    <url>/2021/08/05/%E5%88%9D%E6%8E%A2%E8%BF%94%E5%9B%9E%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="初探返回类"><a href="#初探返回类" class="headerlink" title="初探返回类"></a>初探返回类</h1><h2 id="为什么要对SpringBoot返回统一的标准格式"><a href="#为什么要对SpringBoot返回统一的标准格式" class="headerlink" title="为什么要对SpringBoot返回统一的标准格式"></a>为什么要对SpringBoot返回统一的标准格式</h2><p>默认情况下，SpringBoot的返回格式常见的有三种：</p>
<ul>
<li>返回String</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getStr</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;hello,javadaily&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时调用接口的返回值:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hello,javadaily</span><br></pre></td></tr></table></figure>

<ul>
<li>返回自定义对象</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/aniaml&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Aniaml <span class="title">getAniaml</span><span class="params">()</span></span>&#123;</span><br><span class="line">  Aniaml aniaml = <span class="keyword">new</span> Aniaml(<span class="number">1</span>,<span class="string">&quot;pig&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> aniaml;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时调用接口的返回值：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;pig&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>接口异常</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/error&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">error</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">9</span>/<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时调用接口的返回值：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;timestamp&quot;</span>: <span class="string">&quot;2021-07-08T08:05:15.423+00:00&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;status&quot;</span>: <span class="number">500</span>,</span><br><span class="line">  <span class="attr">&quot;error&quot;</span>: <span class="string">&quot;Internal Server Error&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;/wrong&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>基于上述情况，如果和前端开发人员联调接口，前端人员就会一脸懵逼；由于我们没有给他统一的格式，所以无法处理这些返回值</p>
<p>或者，不同的人对结果进行封装，小明用Result对象，小张用Response对象，这样也是会抓狂的  ╭(°A°`)╮ </p>
<p>所以项目需要一个统一返回格式标准，一般公司开发都或有统一的格式要求</p>
<h2 id="定义返回标准格式"><a href="#定义返回标准格式" class="headerlink" title="定义返回标准格式"></a>定义返回标准格式</h2><p>一个标准的返回格式包括三个部分：</p>
<ol>
<li>status 状态值：由后端统一定义各种返回结果的状态码</li>
<li>message 描述：本次接口调用的结果描述</li>
<li>data 数据：本次返回的数据</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;status&quot;</span>:<span class="string">&quot;100&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;message&quot;</span>:<span class="string">&quot;操作成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>:<span class="string">&quot;hello,javadaily&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>也可以按照需要添加需要的信息</p>
<p>一种方式是可以直接在controller中返回成功的信息，但比较蠢，还会重复很多相同的动作，所以我们用一种更加便捷的方式来调用它</p>
<p><strong>创建一个枚举类 BackEnum 来存放所有的返回值结构</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 枚举类 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">BackEnum</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** 请求数据成功，无异常情况 */</span></span><br><span class="line">    REQUEST_SUCCESS(<span class="number">200</span>,<span class="string">&quot;success&quot;</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** 服务器异常 */</span></span><br><span class="line">    UNKNOWN_ERROR(<span class="number">500</span>,<span class="string">&quot;未知错误&quot;</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** 无法获得用户session信息，或用户session信息不存在 */</span></span><br><span class="line">    UNAUTHORIZED(<span class="number">401</span>,<span class="string">&quot;请先登陆&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 前端数据参数错误 */</span></span><br><span class="line">    PARAM_ERROR(<span class="number">400</span>,<span class="string">&quot;参数错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 数据不符合要求 */</span></span><br><span class="line">    DATA_ERROR(<span class="number">400</span>,<span class="string">&quot;数据错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 请求方式错误，get/post等 */</span></span><br><span class="line">    REQUEST_METHOD_ERROR(<span class="number">405</span>,<span class="string">&quot;请求方式错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 密码错误 */</span></span><br><span class="line">    PWD_ERROR(<span class="number">2</span>,<span class="string">&quot;密码错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 用户名不存在 */</span></span><br><span class="line">    NO_USER(<span class="number">3</span>,<span class="string">&quot;用户不存在&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 账号长度过短，一般用于注册 */</span></span><br><span class="line">    ACCOUNT_LESS(<span class="number">4</span>,<span class="string">&quot;账号小于6位&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 密码长度过短，一般用于注册 */</span></span><br><span class="line">    PASSWORD_LESS(<span class="number">5</span>,<span class="string">&quot;密码过短&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 数据库已存在该数据 */</span></span><br><span class="line">    REPETITION(<span class="number">7</span>, <span class="string">&quot;数据重复添加&quot;</span>),</span><br><span class="line">    ;</span><br><span class="line">    <span class="comment">//注意语句间“逗号”隔开，语句最后“分号”结束</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//枚举的构造函数是缺省的</span></span><br><span class="line">    BackEnum(Integer code, String message)&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> code; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> message; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不用生成 set 方法，因为ORDER_CREATE_FAIL已经吧code和message赋值了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>创建返回类 BackMessage 执行刚才的枚举类</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.first_demo3.back.BackEnum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BackMessage</span> </span>&#123;</span><br><span class="line">    <span class="comment">//标识返回状态</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="comment">//返回成功或失败的一个消息</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="comment">//返回的数据类型，Object 在开发中返回的数据类型不确定</span></span><br><span class="line">    <span class="comment">//后续可以用泛型来解决</span></span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//如何为属性赋值：一个构造函数，set方法</span></span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BackMessage</span><span class="params">(BackEnum backEnum)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=backEnum.getCode();</span><br><span class="line">        <span class="keyword">this</span>.message=backEnum.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BackMessage</span><span class="params">(BackEnum backEnum, Object t)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code=backEnum.getCode();</span><br><span class="line">        <span class="keyword">this</span>.message=backEnum.getMessage();</span><br><span class="line">        <span class="keyword">this</span>.data=t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BackMessage</span><span class="params">(Integer code,String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//重要的是上面3个构造函数，可以重载，通过参数来确定调用哪个</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCode</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> code; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(Integer code)</span> </span>&#123; <span class="keyword">this</span>.code = code;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> message; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getData</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> data; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(Object data)</span> </span>&#123; <span class="keyword">this</span>.data = data; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>这里返回中的data数据我使用的是 Object 类型，后续可以使用泛型<T>来定义</T></li>
</ul>
<h2 id="测试测试！！！-ง-•̀-•́-ง"><a href="#测试测试！！！-ง-•̀-•́-ง" class="headerlink" title="测试测试！！！ (ง •̀_•́)ง"></a>测试测试！！！ (ง •̀_•́)ง</h2><p>数据库信息：表名为check</p>
<p><img src="/2021/08/05/%E5%88%9D%E6%8E%A2%E8%BF%94%E5%9B%9E%E7%B1%BB/image-20210805181202470.png" alt="image-20210805181202470"></p>
<p>实体类就不贴出来了，就这些信息</p>
<p><strong>dao层的CheckMapper</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CheckMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">get</span><span class="params">(String number)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">updateCheck</span><span class="params">(Check check)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>CheckMapper.xml</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;get&quot;</span> resultType=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span><br><span class="line">    SELECT n</span><br><span class="line">    FROM `check`</span><br><span class="line">    WHERE picture = #&#123;picture&#125;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;update id=<span class="string">&quot;updateCheck&quot;</span> parameterType=<span class="string">&quot;com.example.first_demo3.entity.Check&quot;</span>&gt;</span><br><span class="line">    update `check`</span><br><span class="line">    set n = #&#123;n,jdbcType=VARCHAR&#125;</span><br><span class="line">    where picture = #&#123;picture&#125;</span><br><span class="line">&lt;/update&gt;</span><br></pre></td></tr></table></figure>

<p>重头重头！！！</p>
<p><strong>service层CheckService</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CheckService</span> </span>&#123;</span><br><span class="line">    <span class="function">BackMessage <span class="title">get</span><span class="params">(String number)</span></span>;</span><br><span class="line">    <span class="function">BackMessage <span class="title">updateCheck</span><span class="params">(Check check)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>CheckServiceImpl</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckServiceImpl</span> <span class="keyword">implements</span> <span class="title">CheckService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    CheckMapper checkMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BackMessage <span class="title">get</span><span class="params">(String number)</span> </span>&#123;</span><br><span class="line">        String p = checkMapper.get(number);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BackMessage</span><br><span class="line">            (BackEnum.REQUEST_SUCCESS,p);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BackMessage <span class="title">updateCheck</span><span class="params">(Check check)</span> </span>&#123;</span><br><span class="line">        checkMapper.updateCheck(check);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BackMessage</span><br><span class="line">            (BackEnum.REQUEST_SUCCESS,<span class="string">&quot;修改成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>controller层CheckController</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/check&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    CheckService checkService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/get/&#123;picture&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BackMessage <span class="title">get</span><span class="params">(<span class="meta">@PathVariable</span> String picture)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> checkService.get(picture);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/update&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateCheck</span><span class="params">(<span class="meta">@RequestBody</span> Check check)</span></span>&#123;</span><br><span class="line">        checkService.updateCheck(check);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>postman测试</strong></p>
<p>获取值接口：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">localhost:8081/check/get/1</span><br></pre></td></tr></table></figure>

<p>返回：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">&quot;message&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: <span class="string">&quot;111&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改接口：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">localhost:8081/update</span><br></pre></td></tr></table></figure>

<p>输入：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;picture&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;n&quot;</span>:<span class="string">&quot;0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>返回：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;code&quot;</span>: <span class="number">200</span>,</span><br><span class="line">    <span class="attr">&quot;message&quot;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: <span class="string">&quot;修改成功&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>到此返回类成功写成，其余返回值大同小异</p>
<p>返回类的具体内容还可参照：</p>
<p><a href="https://zhuanlan.zhihu.com/p/391288136">SpringBoot 如何统一后端返回格式？老鸟们都是这样玩的！ - 知乎 (zhihu.com)</a></p>]]></content>
  </entry>
</search>
